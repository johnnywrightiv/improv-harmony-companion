import type { Metadata } from 'next';
import { ReduxProvider } from '@/store/provider';
import { ThemeProvider } from '@/components/theme-provider';
import { ThemeToggle } from '@/components/theme-toggle-button';
import './globals.css';
import localFont from 'next/font/local';
import { Playfair_Display } from 'next/font/google'; // Example heading font
import { Pacifico } from 'next/font/google'; // Example decorative font

// Body font (Geist)
const geistSans = localFont({
	src: './fonts/GeistVF.woff',
	variable: '--font-geist-sans',
	weight: '100 900',
});

// Mono font
const geistMono = localFont({
	src: './fonts/GeistMonoVF.woff',
	variable: '--font-geist-mono',
	weight: '100 900',
});

// Heading font
const playfair = Playfair_Display({
	subsets: ['latin'],
	variable: '--font-heading',
});

// Decorative font
const pacifico = Pacifico({
	weight: '400',
	subsets: ['latin'],
	variable: '--font-decorative',
});

export const metadata: Metadata = {
	title: 'Create Next App',
	description: 'Generated by create next app',
};

export default function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	return (
		// can use suppressHydrationWarning if needed...
		<html lang="en">
			<body
				className={`bg-background ${geistSans.variable} ${geistMono.variable} ${playfair.variable} ${pacifico.variable} font-sans antialiased`}
			>
				<ReduxProvider>
					<ThemeProvider>
						<ThemeToggle />
						{children}
					</ThemeProvider>
				</ReduxProvider>
			</body>
		</html>
	);
}
